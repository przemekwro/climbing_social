# Generated by Django 3.0.5 on 2020-05-01 20:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=20)),
                ('rock', models.CharField(max_length=20)),
                ('is_gym', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_inside', models.BooleanField(default=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='climbing.Grade')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='climbing.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Terrain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('is_student', models.BooleanField(default=False, verbose_name='student status')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True)),
                ('best_route', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='climbing.Route')),
                ('friends', models.ManyToManyField(related_name='_user_friends_+', to='climbing.User')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='route',
            name='terrain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='climbing.Terrain'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=250)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='climbing.User')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='climbing.Route')),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('belayer', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, related_name='belayer', to=settings.AUTH_USER_MODEL)),
                ('climber', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, related_name='climber', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.ProtectedError, to='climbing.Route')),
            ],
        ),
    ]
